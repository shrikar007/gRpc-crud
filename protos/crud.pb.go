// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/crud.proto

package expensepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Expense struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Typeofaccount        string   `protobuf:"bytes,3,opt,name=typeofaccount,proto3" json:"typeofaccount,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Expense) Reset()         { *m = Expense{} }
func (m *Expense) String() string { return proto.CompactTextString(m) }
func (*Expense) ProtoMessage()    {}
func (*Expense) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{0}
}

func (m *Expense) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expense.Unmarshal(m, b)
}
func (m *Expense) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expense.Marshal(b, m, deterministic)
}
func (m *Expense) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expense.Merge(m, src)
}
func (m *Expense) XXX_Size() int {
	return xxx_messageInfo_Expense.Size(m)
}
func (m *Expense) XXX_DiscardUnknown() {
	xxx_messageInfo_Expense.DiscardUnknown(m)
}

var xxx_messageInfo_Expense proto.InternalMessageInfo

func (m *Expense) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Expense) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Expense) GetTypeofaccount() string {
	if m != nil {
		return m.Typeofaccount
	}
	return ""
}

func (m *Expense) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type CreateReq struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{1}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

type CreateRes struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRes) Reset()         { *m = CreateRes{} }
func (m *CreateRes) String() string { return proto.CompactTextString(m) }
func (*CreateRes) ProtoMessage()    {}
func (*CreateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{2}
}

func (m *CreateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRes.Unmarshal(m, b)
}
func (m *CreateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRes.Marshal(b, m, deterministic)
}
func (m *CreateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRes.Merge(m, src)
}
func (m *CreateRes) XXX_Size() int {
	return xxx_messageInfo_CreateRes.Size(m)
}
func (m *CreateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRes proto.InternalMessageInfo

func (m *CreateRes) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

type ReadReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadReq) Reset()         { *m = ReadReq{} }
func (m *ReadReq) String() string { return proto.CompactTextString(m) }
func (*ReadReq) ProtoMessage()    {}
func (*ReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{3}
}

func (m *ReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadReq.Unmarshal(m, b)
}
func (m *ReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadReq.Marshal(b, m, deterministic)
}
func (m *ReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadReq.Merge(m, src)
}
func (m *ReadReq) XXX_Size() int {
	return xxx_messageInfo_ReadReq.Size(m)
}
func (m *ReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadReq proto.InternalMessageInfo

func (m *ReadReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRes struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRes) Reset()         { *m = ReadRes{} }
func (m *ReadRes) String() string { return proto.CompactTextString(m) }
func (*ReadRes) ProtoMessage()    {}
func (*ReadRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{4}
}

func (m *ReadRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRes.Unmarshal(m, b)
}
func (m *ReadRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRes.Marshal(b, m, deterministic)
}
func (m *ReadRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRes.Merge(m, src)
}
func (m *ReadRes) XXX_Size() int {
	return xxx_messageInfo_ReadRes.Size(m)
}
func (m *ReadRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRes proto.InternalMessageInfo

func (m *ReadRes) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

type UpdateReq struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{5}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

type UpdateRes struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRes) Reset()         { *m = UpdateRes{} }
func (m *UpdateRes) String() string { return proto.CompactTextString(m) }
func (*UpdateRes) ProtoMessage()    {}
func (*UpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{6}
}

func (m *UpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRes.Unmarshal(m, b)
}
func (m *UpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRes.Marshal(b, m, deterministic)
}
func (m *UpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRes.Merge(m, src)
}
func (m *UpdateRes) XXX_Size() int {
	return xxx_messageInfo_UpdateRes.Size(m)
}
func (m *UpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRes proto.InternalMessageInfo

func (m *UpdateRes) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

type DeleteReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{7}
}

func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (m *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(m, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRes) Reset()         { *m = DeleteRes{} }
func (m *DeleteRes) String() string { return proto.CompactTextString(m) }
func (*DeleteRes) ProtoMessage()    {}
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{8}
}

func (m *DeleteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRes.Unmarshal(m, b)
}
func (m *DeleteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRes.Marshal(b, m, deterministic)
}
func (m *DeleteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRes.Merge(m, src)
}
func (m *DeleteRes) XXX_Size() int {
	return xxx_messageInfo_DeleteRes.Size(m)
}
func (m *DeleteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRes proto.InternalMessageInfo

func (m *DeleteRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{9}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

type ListRes struct {
	Exp                  *Expense `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRes) Reset()         { *m = ListRes{} }
func (m *ListRes) String() string { return proto.CompactTextString(m) }
func (*ListRes) ProtoMessage()    {}
func (*ListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dfefec3679db472, []int{10}
}

func (m *ListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRes.Unmarshal(m, b)
}
func (m *ListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRes.Marshal(b, m, deterministic)
}
func (m *ListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRes.Merge(m, src)
}
func (m *ListRes) XXX_Size() int {
	return xxx_messageInfo_ListRes.Size(m)
}
func (m *ListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListRes proto.InternalMessageInfo

func (m *ListRes) GetExp() *Expense {
	if m != nil {
		return m.Exp
	}
	return nil
}

func init() {
	proto.RegisterType((*Expense)(nil), "expense.Expense")
	proto.RegisterType((*CreateReq)(nil), "expense.CreateReq")
	proto.RegisterType((*CreateRes)(nil), "expense.CreateRes")
	proto.RegisterType((*ReadReq)(nil), "expense.ReadReq")
	proto.RegisterType((*ReadRes)(nil), "expense.ReadRes")
	proto.RegisterType((*UpdateReq)(nil), "expense.UpdateReq")
	proto.RegisterType((*UpdateRes)(nil), "expense.UpdateRes")
	proto.RegisterType((*DeleteReq)(nil), "expense.DeleteReq")
	proto.RegisterType((*DeleteRes)(nil), "expense.DeleteRes")
	proto.RegisterType((*ListReq)(nil), "expense.ListReq")
	proto.RegisterType((*ListRes)(nil), "expense.ListRes")
}

func init() { proto.RegisterFile("protos/crud.proto", fileDescriptor_4dfefec3679db472) }

var fileDescriptor_4dfefec3679db472 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x3f, 0x4f, 0xfb, 0x30,
	0x14, 0x54, 0xd3, 0x9f, 0x9a, 0x5f, 0x5e, 0x68, 0x05, 0x1e, 0x50, 0x08, 0x4b, 0x15, 0x81, 0xc4,
	0x42, 0x0b, 0x05, 0x89, 0x9d, 0x3f, 0x1b, 0x53, 0x10, 0x0b, 0x5b, 0xea, 0x3c, 0x24, 0x4b, 0xd0,
	0xb8, 0x79, 0x2e, 0x6a, 0xbf, 0x0f, 0x1f, 0x14, 0xf9, 0x4f, 0xd2, 0x90, 0x2c, 0x61, 0x7b, 0xbe,
	0xf3, 0xe5, 0xce, 0xe7, 0x18, 0x8e, 0x64, 0x59, 0xa8, 0x82, 0xe6, 0xbc, 0xdc, 0xe4, 0x33, 0x33,
	0x33, 0x1f, 0xb7, 0x12, 0x57, 0x84, 0xc9, 0x0e, 0xfc, 0x27, 0x3b, 0xb2, 0x09, 0x78, 0x22, 0x8f,
	0x06, 0xd3, 0xc1, 0x45, 0x90, 0x7a, 0x22, 0x67, 0x53, 0x08, 0x73, 0x24, 0x5e, 0x0a, 0xa9, 0x44,
	0xb1, 0x8a, 0x3c, 0x43, 0x34, 0x21, 0x76, 0x06, 0x63, 0xb5, 0x93, 0x58, 0xbc, 0x67, 0x9c, 0x17,
	0x9b, 0x95, 0x8a, 0x86, 0x66, 0xcf, 0x6f, 0x90, 0x1d, 0xc3, 0x28, 0xfb, 0x34, 0xf4, 0x3f, 0x43,
	0xbb, 0x55, 0x32, 0x87, 0xe0, 0xa1, 0xc4, 0x4c, 0x61, 0x8a, 0x6b, 0x96, 0xc0, 0x10, 0xb7, 0xd2,
	0xb8, 0x87, 0x8b, 0xc3, 0x99, 0x8b, 0x37, 0x73, 0xd9, 0x52, 0x4d, 0x36, 0x05, 0xd4, 0x4b, 0x70,
	0x02, 0x7e, 0x8a, 0x59, 0xae, 0xbf, 0xdf, 0x3a, 0x5c, 0x72, 0x59, 0x51, 0xd4, 0xd7, 0xfa, 0x55,
	0xe6, 0x7f, 0xcb, 0x5a, 0x09, 0xfa, 0x39, 0x9c, 0x42, 0xf0, 0x88, 0x1f, 0x68, 0x1d, 0xda, 0x69,
	0xcf, 0xf7, 0x24, 0xb1, 0x08, 0x7c, 0xda, 0x70, 0x8e, 0x44, 0x66, 0xc7, 0xff, 0xb4, 0x5a, 0x26,
	0x01, 0xf8, 0xcf, 0x82, 0x54, 0x8a, 0x6b, 0x7d, 0x3e, 0x3b, 0xf6, 0x72, 0x5f, 0x7c, 0x7b, 0x30,
	0x71, 0xc0, 0x0b, 0x96, 0x5f, 0x82, 0x23, 0xbb, 0x83, 0xb1, 0x6d, 0xbb, 0xfa, 0x3f, 0x58, 0x2d,
	0xad, 0xaf, 0x2d, 0xee, 0x62, 0xc4, 0xae, 0x21, 0xd4, 0xd5, 0x56, 0xb2, 0xbd, 0xa3, 0xbb, 0x8b,
	0xb8, 0x8d, 0x90, 0xf6, 0xb2, 0x6d, 0x75, 0xbd, 0xea, 0xda, 0xe3, 0x2e, 0x66, 0x84, 0xb6, 0x98,
	0xae, 0xb0, 0x6e, 0x33, 0xee, 0x62, 0xc4, 0x6e, 0xe1, 0x40, 0xf7, 0xe3, 0x64, 0xd4, 0x48, 0xe9,
	0x1a, 0x8c, 0xdb, 0x08, 0x5d, 0x0d, 0xee, 0xc3, 0xb7, 0xc0, 0x81, 0x72, 0xb9, 0x1c, 0x99, 0xa7,
	0x74, 0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0x32, 0x5d, 0xcb, 0xdf, 0x5f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExpenseServiceClient is the client API for ExpenseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExpenseServiceClient interface {
	CreateExpense(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error)
	ReadExpense(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*ReadRes, error)
	UpdateExpense(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error)
	DeleteExpense(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error)
	ListExpenses(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (ExpenseService_ListExpensesClient, error)
}

type expenseServiceClient struct {
	cc *grpc.ClientConn
}

func NewExpenseServiceClient(cc *grpc.ClientConn) ExpenseServiceClient {
	return &expenseServiceClient{cc}
}

func (c *expenseServiceClient) CreateExpense(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error) {
	out := new(CreateRes)
	err := c.cc.Invoke(ctx, "/expense.ExpenseService/CreateExpense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expenseServiceClient) ReadExpense(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*ReadRes, error) {
	out := new(ReadRes)
	err := c.cc.Invoke(ctx, "/expense.ExpenseService/ReadExpense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expenseServiceClient) UpdateExpense(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error) {
	out := new(UpdateRes)
	err := c.cc.Invoke(ctx, "/expense.ExpenseService/UpdateExpense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expenseServiceClient) DeleteExpense(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error) {
	out := new(DeleteRes)
	err := c.cc.Invoke(ctx, "/expense.ExpenseService/DeleteExpense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *expenseServiceClient) ListExpenses(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (ExpenseService_ListExpensesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExpenseService_serviceDesc.Streams[0], "/expense.ExpenseService/ListExpenses", opts...)
	if err != nil {
		return nil, err
	}
	x := &expenseServiceListExpensesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExpenseService_ListExpensesClient interface {
	Recv() (*ListRes, error)
	grpc.ClientStream
}

type expenseServiceListExpensesClient struct {
	grpc.ClientStream
}

func (x *expenseServiceListExpensesClient) Recv() (*ListRes, error) {
	m := new(ListRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExpenseServiceServer is the server API for ExpenseService service.
type ExpenseServiceServer interface {
	CreateExpense(context.Context, *CreateReq) (*CreateRes, error)
	ReadExpense(context.Context, *ReadReq) (*ReadRes, error)
	UpdateExpense(context.Context, *UpdateReq) (*UpdateRes, error)
	DeleteExpense(context.Context, *DeleteReq) (*DeleteRes, error)
	ListExpenses(*ListReq, ExpenseService_ListExpensesServer) error
}

// UnimplementedExpenseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExpenseServiceServer struct {
}

func (*UnimplementedExpenseServiceServer) CreateExpense(ctx context.Context, req *CreateReq) (*CreateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExpense not implemented")
}
func (*UnimplementedExpenseServiceServer) ReadExpense(ctx context.Context, req *ReadReq) (*ReadRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadExpense not implemented")
}
func (*UnimplementedExpenseServiceServer) UpdateExpense(ctx context.Context, req *UpdateReq) (*UpdateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExpense not implemented")
}
func (*UnimplementedExpenseServiceServer) DeleteExpense(ctx context.Context, req *DeleteReq) (*DeleteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExpense not implemented")
}
func (*UnimplementedExpenseServiceServer) ListExpenses(req *ListReq, srv ExpenseService_ListExpensesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListExpenses not implemented")
}

func RegisterExpenseServiceServer(s *grpc.Server, srv ExpenseServiceServer) {
	s.RegisterService(&_ExpenseService_serviceDesc, srv)
}

func _ExpenseService_CreateExpense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpenseServiceServer).CreateExpense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expense.ExpenseService/CreateExpense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpenseServiceServer).CreateExpense(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpenseService_ReadExpense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpenseServiceServer).ReadExpense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expense.ExpenseService/ReadExpense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpenseServiceServer).ReadExpense(ctx, req.(*ReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpenseService_UpdateExpense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpenseServiceServer).UpdateExpense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expense.ExpenseService/UpdateExpense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpenseServiceServer).UpdateExpense(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpenseService_DeleteExpense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpenseServiceServer).DeleteExpense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expense.ExpenseService/DeleteExpense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpenseServiceServer).DeleteExpense(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExpenseService_ListExpenses_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExpenseServiceServer).ListExpenses(m, &expenseServiceListExpensesServer{stream})
}

type ExpenseService_ListExpensesServer interface {
	Send(*ListRes) error
	grpc.ServerStream
}

type expenseServiceListExpensesServer struct {
	grpc.ServerStream
}

func (x *expenseServiceListExpensesServer) Send(m *ListRes) error {
	return x.ServerStream.SendMsg(m)
}

var _ExpenseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "expense.ExpenseService",
	HandlerType: (*ExpenseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExpense",
			Handler:    _ExpenseService_CreateExpense_Handler,
		},
		{
			MethodName: "ReadExpense",
			Handler:    _ExpenseService_ReadExpense_Handler,
		},
		{
			MethodName: "UpdateExpense",
			Handler:    _ExpenseService_UpdateExpense_Handler,
		},
		{
			MethodName: "DeleteExpense",
			Handler:    _ExpenseService_DeleteExpense_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListExpenses",
			Handler:       _ExpenseService_ListExpenses_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/crud.proto",
}
